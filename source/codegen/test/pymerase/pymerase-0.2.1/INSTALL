* How to install?
-----------------

** From Source
-----------------
1) Download (https://pymerase.sourceforge.net/download/)
2) Decompress archive (tar xvzf pymerase-0.2-src.tgz
    or unzip pymerase-0.2-src.zip)
3) run 'python setup.py install' (Installs both Pymerase and SMW)


Pymerase depends on several components depending on what you'd like to
do with it.

** Debian Packages Required (partial list)
-------------------------------------
python2.3
python2.3-dev
python2.3-egenix-mxdatetime
python2.3-psycopg
python2.3-xml
python2.3-xmlbase
python2.3-ipython


** UML support
--------------

Currently the UML parser is the most well tested. 

The key thing for UML files is you need to generate them somehow,
we've used 
  ArgoUML (http://argouml.tigris.org)
  Poseidon (http://www.gentleware.com)
  SMW (http://www.abo.fi/~iporres/html/smw.html)

Thanks to the SMW folk for allowing us to distribute their parser in
with pymerase. This means that unlike previous versions of Pymerase,
you should be able to just extract Pymerase and parse UML files.


** DB Support
-------------

The code generated by CreateDBAPI, needs the mxTools Date Time
extension as well as the postgresql python db api module.

The mx tools is available from:
http://www.egenix.com/files/python/mxDateTime.html 

The database interface psycopg is distributed from
http://initd.org/software/initd/psycopg

Also, the SQL code generated by CreateSQL is using postgresql's sequence
feature, and so is currently dependent on postgresql. 

** GeneX Table Definition Format
--------------------------------

Currently the GeneX Table definition format has suffered from some
code rot (As it was the first mode I started developing against.)

At minimum it requires an XML parser. The default python XML parser is
called expat, newer versions are available at
http://sourceforge.net/projects/pyxml. Later versions of this might
work with the current table.dtd

2003 Apr 02: default parser seems to work, so the steps to install
pirxx & xerces seem to be unnecessary. (But I'm leaving the section in
just in case.)  [Well, almost works, since the default xml parser
couldn't find the table.dtd file without using a full URL instead of
just a pathname]

  However the version of expat I was using didn't properly support
  entities with the XML files were using so I ended up using the
  xerces-c XML parser. 
  
  A project called pirxx is providing the python wrapper for xerces-c.
  
  xerces-c: http://xml.apache.org/xerces-c/index.html
  pirxx: http://sourceforge.net/projects/pirxx
