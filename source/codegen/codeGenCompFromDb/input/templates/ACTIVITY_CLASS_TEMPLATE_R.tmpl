/*******************************************************************************
 * <p>Copyright: Copyright(c) 2008 POSDATA</p>
 *
 * @author 홍길동
 * 
 * <p>Test Gubun: Unit_Test_IsTested?:N, Integrated_Test_IsTested?:N</p>
*******************************************************************************/

package com.posdata.glue.sample;//??????
import com.posdata.glue.biz.activity.PosActivity;
import com.posdata.glue.biz.constants.PosBizControlConstants;
import com.posdata.glue.context.PosContext;
import com.posdata.glue.dao.PosGenericDao;
import com.posdata.glue.dao.vo.PosParameter;
import com.posdata.glue.dao.vo.PosRowSet;

import com.posdata.glue.reuse.activity.PosServiceParamIF;

public class ${classId} extends PosActivity 
{
    public String runActivity(PosContext ctx)
    {
        ${methodId}Action(ctx);
        return PosBizControlConstants.SUCCESS;            
    }    

    
    /**
    조회
    */    
    private void ${methodId}Action(PosContext ctx) //select()Action
    {
        PosGenericDao dao = this.getDao(PosServiceParamIF.DAO);        
        PosParameter param = new PosParameter();

#for $fld in $aTable.pkColumnList
        String[] ${fld.getPadedJavaName()} = (String[])ctx.get("${fld.javaName}"); //${fld.columnKor}        
#end for        
        
        String[] pageSize = (String[])ctx.get(ParamConstantsIF.PAGE_SIZE); // pageSize
        String[] curPage  = (String[])ctx.get(ParamConstantsIF.CUR_PAGE);  // curPage
        
        //????? logger 표준화 필요
        this.logger.logDebug(" ==> this.running (1)");
        this.logger.logDebug(" ==> facCd = " + facCd);
        this.logger.logDebug(" ==> operCd = " + operCd);
        this.logger.logDebug(" ==> calOrderAmt = " + calOrderAmt);        

        // WHERE 조건절    
#set $idx = 0            
#for $fld in $aTable.pkColumnList
        param.setWhereClauseParameter($idx, ${fld.javaName}[index]); //Pk
    #set $idx = $idx + 1
#end for        
        
        if (pageSize == null)
        {
            pageSize = new String[1];
            pageSize[0] = "15";
        }
        if (curPage == null)
        {
            curPage = new String[1];
            curPage[0] = "1";
        }
        
        PosRowSet rowset = dao.findForNavigationPage("${processID}_${methodId}", param, 
                                                     Integer.parseInt(pageSize[0]), 
                                                     Integer.parseInt(curPage[0]));
        ctx.setRowSet("${methodId}ListResult", rowSet);
        //this.logger.logDebug(" ==> this.running (2)");
    }
}

