<HTML><HEAD><META http-equiv=Content-Type content="text/html; charset=euc-kr">
<style type="text/css">
<!--
BODY,TD,SELECT,input,DIV,form,TEXTAREA,option {font-size:9pt; font-family:verdana;color:333333}
A:link {color:#4077a0;text-decoration:none;font-weight: bold}
A:visited {color:#4077a0;text-decoration:none;font-weight: bold}
A:hover{color:#990000;text-decoration:none;font-weight: bold}
--></style></HEAD>
<BODY>
<P>
<TABLE cellSpacing=1 cellPadding=4 width=500 bgColor=#3c62c6 border=0>
  
  <TR>
    <TD width=600>
      <DIV><STRONG><FONT color=#ffffff>▶제목/참고</FONT></STRONG> </DIV></TD></TR>
  <TR bgColor=#ffffff>
    <TD>
      <DIV></DIV>
      <DIV>Title: </DIV>
      <DIV>&nbsp;</DIV>
      <DIV>&nbsp;</DIV>
      <DIV>From: </DIV></TD></TR></TABLE></P>
<DIV><A 
href="http://www.devshed.com/c/a/Python/Templating-with-Cheetah/3/">http://www.devshed.com/c/a/Python/Templating-with-Cheetah/3/</A></DIV>
<DIV>&nbsp;</DIV>
<DIV>&nbsp;</DIV>
<DIV><SPAN class=contentpagetitle><B>Templating with Cheetah</B></SPAN> 
<BR>(Page 1 of 4 )<BR></DIV>
<DIV>&nbsp;</DIV>
<DIV><BR>Templating makes it easier to 
handle dynamic content on web pages. One of the better templating frameworks for 
Python is Cheetah. Keep reading to find out more.</DIV>        
             
      
<P><B>Introduction</B> </P>
<P>The creation of dynamic web content is made much easier by using <A class=iAs 
style="PADDING-BOTTOM: 1px; COLOR: blue; BORDER-BOTTOM: blue 0.07em solid; BACKGROUND-COLOR: transparent; TEXT-DECORATION: underline" 
href="#" target=_blank>templates</A>. These templates include substitution 
variables that are replaced with the proper value when the content is delivered 
to the user. There are a number of languages and frameworks that offer 
templating to <A class=iAs 
style="PADDING-BOTTOM: 1px; COLOR: blue; BORDER-BOTTOM: blue 0.07em solid; BACKGROUND-COLOR: transparent; TEXT-DECORATION: underline" 
href="#" target=_blank>developers</A>, but Cheetah is one of Python's 
frontrunners. It allows templates to be made and then converted into Python 
objects for use within Python <A class=iAs 
style="PADDING-BOTTOM: 1px; COLOR: blue; BORDER-BOTTOM: blue 0.07em solid; BACKGROUND-COLOR: transparent; TEXT-DECORATION: underline" 
href="#" target=_blank>applications</A>, and it works with pretty much every 
Python framework. For example, Cheetah could start with a template that looks 
like this:</P>
<P><FONT face=Courier>$header<BR></FONT>Hello, $name. Your last visit was on 
$date.<BR><FONT face=Courier>$footer</FONT></P>
<P>Cheetah would then compile it into a module, and <I>$header</I>, 
<I>$name</I>, <I>$date</I> and <I>$footer</I> could be substituted for just 
about anything, complete with any bells and whistles. In this article, we'll 
examine Cheetah and what it has to offer to Python developers looking to 
simplify dynamic content generation.</P>
<P><B>Installing Cheetah</B></P>
<P>Cheetah may be obtained from SourceForge:</P>
<P><A href="http://sourceforge.net/project/showfiles.php?group_id=28961" 
rel=nofollow><U><FONT 
color=#800080>http://sourceforge.net/project/showfiles.php?group_id=28961</FONT></U></A></P>
<P>Simply unarchive Cheetah and install it:</P>
<P><FONT face=Courier>python install setup.py</FONT></P>
<P>Windows users will likely want to take a few extra steps when installing 
Cheetah. The first is to rename the file cheetah since it does not come with any 
extension to identify it as a Python file. It's located in the Scripts directory 
of your Python installation. Simply rename it&nbsp;cheetah.py, and if you are 
dying to lose the extension, create a file in the same directory called 
cheetah.bat:</P>
<P><FONT face=Courier>cheetah.py %*</FONT></P>
<P>Next, it is recommended that you obtain a file named _namemapper.pyd from 
SourceForge. It speeds up Cheetah on Windows:</P>
<P><A 
href="http://prdownloads.sourceforge.net/cheetahtemplate/_namemapper.pyd?download" 
rel=nofollow><U><FONT 
color=#0000ff>http://prdownloads.sourceforge.net/cheetahtemplate/_namemapper.pyd?download</FONT></U></A></P>
<P>Place the file in the Lib/site-packages/Cheetah directory of your Python 
installation.</P>
<P>You'll probably want to add Cheetah to your <I>Path</I> environmental 
variable, too. If you've never done anything like this before (and since this 
article is intended to be useful to people of various levels of experience), 
simply go to the Properties of My Computer, click the Advanced tab, and then 
click the Environmental Variables button. Then, add&nbsp; a semicolon to 
<I>Path</I> followed by the path to cheetah's location. For example:</P>
<P><FONT face=Courier>;C:\Python24\Scripts</FONT></P>
<P>You'll want to make sure Python is there, too.</P>
<P>
<DIV class=pagenavbar align=center>
<DIV align=center><A 
href="http://www.devshed.com/c/a/Python/Templating-with-Cheetah/1/" 
rel=nofollow><FONT color=#0000ff size=4><U>Next: Basic Templating 
&gt;&gt;</U></FONT></A></DIV></DIV>
</BODY></HTML>
