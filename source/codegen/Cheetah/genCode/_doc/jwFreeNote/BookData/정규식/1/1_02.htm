<HTML><HEAD><META http-equiv=Content-Type content="text/html; charset=euc-kr">
<style type="text/css">
<!--
BODY,TD,SELECT,input,DIV,form,TEXTAREA,option {font-size:9pt; font-family:verdana;color:333333}
A:link {color:#4077a0;text-decoration:none;font-weight: bold}
A:visited {color:#4077a0;text-decoration:none;font-weight: bold}
A:hover{color:#990000;text-decoration:none;font-weight: bold}
--></style></HEAD>
<BODY>
<table cellSpacing=1 cellPadding=4 width=500 bgColor=#3c62c6 border=0>
  <tr>
    <td width=600>
      <div><STRONG><FONT color=#ffffff>▶제목/참고</FONT></STRONG> </div></td></tr>
  <tr bgColor=#ffffff>
    <td>
      <div></div>
      <DIV>Title: </DIV>      
      <div>&nbsp;</div>
      <DIV>&nbsp;</DIV>
      <DIV>From: </DIV>
    </td></tr></table>
<div>&nbsp;</div>
<DIV>
<P>Build regular expression strings with characters and metacharacters. Simple 
characters match one-for-one against the same characters in the target 
string.</P>
<H2>Basic Metacharacters</H2>
<TABLE borderColor=#ffffff cellSpacing=0 borderColorDark=#ffffff cellPadding=5 
borderColorLight=#d0d0d0 border=1>
  
  <TR class=greyer>
    <TD>
      <TABLE borderColor=#ffffff cellSpacing=0 borderColorDark=#ffffff 
      cellPadding=3 width="100%" borderColorLight=#c0c0c0 border=1>
        
        <TR class=grey>
          <TH>Metacharacter</TH>
          <TH>Matches</TH></TR>
        <TR class=grey>
          <TD>&nbsp;[]</TD>
          <TD>character class, in which metacharacters are inactive</TD></TR>
        <TR class=grey>
          <TD>&nbsp;[a-d]</TD>
          <TD>character class specifying a range</TD></TR>
        <TR class=grey>
          <TD>^</TD>
          <TD>set complement</TD></TR>
        <TR class=grey>
          <TD>\\</TD>
          <TD>escapes metacharacters</TD></TR>
        <TR class=grey>
          <TD>.</TD>
          <TD>anything except a 
newline</TD></TR></TABLE></TD></TR></TABLE>
<H2>Special Sequences</H2>
<TABLE borderColor=#ffffff cellSpacing=0 borderColorDark=#ffffff cellPadding=5 
borderColorLight=#d0d0d0 border=1>
  
  <TR class=greyer>
    <TD>
      <TABLE borderColor=#ffffff cellSpacing=0 borderColorDark=#ffffff 
      cellPadding=3 width="100%" borderColorLight=#c0c0c0 border=1>
        
        <TR class=grey>
          <TH>Metacharacter</TH>
          <TH>Matches</TH>
          <TH>Equivalent</TH></TR>
        <TR class=grey>
          <TD>\d</TD>
          <TD>any decimal digit</TD>
          <TD>&nbsp;[0-9]</TD></TR>
        <TR class=grey>
          <TD>\D</TD>
          <TD>any non-digit character</TD>
          <TD>&nbsp;[^0-9]</TD></TR>
        <TR class=grey>
          <TD>\s</TD>
          <TD>any whitespace character</TD>
          <TD>&nbsp;[ \t\n\r\f\v]</TD></TR>
        <TR class=grey>
          <TD>\S</TD>
          <TD>any non-whitespace character</TD>
          <TD>&nbsp;[^ \t\n\r\f\v]</TD></TR>
        <TR class=grey>
          <TD>\w</TD>
          <TD>any alphanumeric character</TD>
          <TD>&nbsp;[a-zA-Z0-9_]</TD></TR>
        <TR class=grey>
          <TD>\W</TD>
          <TD>any non-alphanumeric character</TD>
          <TD>&nbsp;[^a-zA-Z0-9_]</TD></TR></TABLE></TD></TR></TABLE>
<H2>Repetition</H2>
<TABLE borderColor=#ffffff cellSpacing=0 borderColorDark=#ffffff cellPadding=5 
borderColorLight=#d0d0d0 border=1>
  
  <TR class=greyer>
    <TD>
      <TABLE borderColor=#ffffff cellSpacing=0 borderColorDark=#ffffff 
      cellPadding=3 width="100%" borderColorLight=#c0c0c0 border=1>
        
        <TR class=grey>
          <TH>Metacharacter</TH>
          <TH>Matches</TH>
          <TH>Equivalent</TH></TR>
        <TR class=grey>
          <TD>{m,n}</TD>
          <TD>previous character between m and n times</TD>
          <TD>&nbsp;</TD></TR>
        <TR class=grey>
          <TD>&nbsp;*</TD>
          <TD>previous character zero or more times</TD>
          <TD>{0,}</TD></TR>
        <TR class=grey>
          <TD>+</TD>
          <TD>previous character one or more times</TD>
          <TD>{1,}</TD></TR>
        <TR class=grey>
          <TD>?</TD>
          <TD>previous character zero or once</TD>
          <TD>{0,1}</TD></TR></TABLE></TD></TR></TABLE>
<P>These repetition qualifiers are greedy; they match as much text as possible. 
Adding <TT>?</TT> after the qualifier makes it perform the match in non-greedy 
or minimal fashion; as few characters as possible will be matched.</P>
<H2>Zero-Width Assertions</H2>
<TABLE borderColor=#ffffff cellSpacing=0 borderColorDark=#ffffff cellPadding=5 
borderColorLight=#d0d0d0 border=1>
  
  <TR class=greyer>
    <TD>
      <TABLE borderColor=#ffffff cellSpacing=0 borderColorDark=#ffffff 
      cellPadding=3 width="100%" borderColorLight=#c0c0c0 border=1>
        
        <TR class=grey>
          <TH>Metacharacter</TH>
          <TH>Matches</TH></TR>
        <TR class=grey>
          <TD>|</TD>
          <TD>one string or another</TD></TR>
        <TR class=grey>
          <TD>^</TD>
          <TD>at the start of lines</TD></TR>
        <TR class=grey>
          <TD>$</TD>
          <TD>at the end of lines</TD></TR>
        <TR class=grey>
          <TD>\A</TD>
          <TD>at the start of string</TD></TR>
        <TR class=grey>
          <TD>\Z</TD>
          <TD>at the end of string</TD></TR>
        <TR class=grey>
          <TD>\\b</TD>
          <TD>the current position is at the beginning or end of a word</TD></TR>
        <TR class=grey>
          <TD>\B</TD>
          <TD>the current position is not at a word boundary</TD></TR>
        <TR class=grey>
          <TD>(?=...)</TD>
          <TD>if contained re matches at the current location</TD></TR>
        <TR class=grey>
          <TD>(?!...)</TD>
          <TD>if contained re does not match at the current 
        location</TD></TR></TABLE></TD></TR></TABLE>
<P>Zero-width assertions do not consume characters. Thus, the rest of the RE is 
continued where the assertion started, not from where it ended as would 
otherwise be the case. The last two metacharacters are called lookahead 
assertions.</P>
<H2>Groups</H2>
<TABLE borderColor=#ffffff cellSpacing=0 borderColorDark=#ffffff cellPadding=5 
borderColorLight=#d0d0d0 border=1>
  
  <TR class=greyer>
    <TD>
      <TABLE borderColor=#ffffff cellSpacing=0 borderColorDark=#ffffff 
      cellPadding=3 width="100%" borderColorLight=#c0c0c0 border=1>
        
        <TR class=grey>
          <TH>Metacharacter</TH>
          <TH>Meaning</TH></TR>
        <TR class=grey>
          <TD>(...)</TD>
          <TD>indicates a group</TD></TR>
        <TR class=grey>
          <TD>(?iLmsx)</TD>
          <TD>sets the corresponding flags for the entire RE</TD></TR>
        <TR class=grey>
          <TD>(?:...)</TD>
          <TD>a non-captured group that is not available in the match 
set</TD></TR>
        <TR class=grey>
          <TD>(?P&lt;name&gt;...)</TD>
          <TD>a group named for easier reference</TD></TR>
        <TR class=grey>
          <TD>(?P=name)</TD>
          <TD>matches whatever text was matched by the earlier named 
        group</TD></TR>
        <TR class=grey>
          <TD>(?#...)</TD>
          <TD>comment; the contents are simply 
  ignored</TD></TR></TABLE></TD></TR></TABLE>
<P>&nbsp;</P></DIV>
</BODY></HTML>
